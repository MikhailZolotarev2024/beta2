// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function toggleMenu() {
  const menuIcon = document.querySelector(".menu-icon");
  const menuDropdown = document.querySelector(".menu-dropdown");
  
  if (menuIcon && menuDropdown) {
    menuIcon.classList.toggle("active");
    menuDropdown.classList.toggle("active");
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–ª–∏–∫–∞ –≤–Ω–µ –º–µ–Ω—é –¥–ª—è –µ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è
    if (menuDropdown.classList.contains("active")) {
      document.addEventListener("click", closeMenuOnClickOutside);
    } else {
      document.removeEventListener("click", closeMenuOnClickOutside);
    }
  }
}

function closeMenuOnClickOutside(event) {
  const menuIcon = document.querySelector(".menu-icon");
  const menuDropdown = document.querySelector(".menu-dropdown");
  const langToggle = document.querySelector(".lang-toggle");
  
  if (menuIcon && menuDropdown && 
      !menuIcon.contains(event.target) && 
      !menuDropdown.contains(event.target) &&
      !langToggle.contains(event.target)) {
    menuIcon.classList.remove("active");
    menuDropdown.classList.remove("active");
    document.removeEventListener("click", closeMenuOnClickOutside);
  }
}

function toggleSection(event) {
  const header = event.target;
  const section = header.closest('.expandable-section');
  if (section) {
    section.classList.toggle("active");
  }
}

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —è–∑—ã–∫–æ–≤
const LANGUAGES = {
  RU: 'ru',
  EN: 'en'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∫–Ω–æ–ø–∫–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
function updateLangToggleBtnText(currentLang) {
  const langToggleBtn = document.querySelector('.lang-btn');
  if (langToggleBtn) {
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    langToggleBtn.style.opacity = '0';
    setTimeout(() => {
      langToggleBtn.textContent = currentLang.toUpperCase();
      langToggleBtn.style.opacity = '1';
    }, 150);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
function setLangButtonLoading(isLoading) {
  const langToggleBtn = document.querySelector('.lang-btn');
  if (langToggleBtn) {
    if (isLoading) {
      langToggleBtn.innerHTML = '<span class="loading-spinner"></span>';
      langToggleBtn.disabled = true;
    } else {
      langToggleBtn.disabled = false;
      updateLangToggleBtnText(document.documentElement.lang);
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞
async function applyLang(lang) {
  console.log('üöÄ Calling loadLang with:', lang);
  try {
    setLangButtonLoading(true);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫
    localStorage.setItem('lang', lang);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
    await loadLang(lang);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    updateLangToggleBtnText(lang);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç lang —É html
    document.documentElement.lang = lang;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—É—Å–µ–ª—å –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
    if (typeof updateNewsCarousel === 'function') {
      updateNewsCarousel();
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
    const elements = document.querySelectorAll('[data-i18n]');
    elements.forEach(el => {
      el.style.opacity = '0';
      el.style.transform = 'translateY(10px)';
      setTimeout(() => {
        el.style.opacity = '1';
        el.style.transform = 'translateY(0)';
      }, 100);
    });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
    const langDropdown = document.querySelector('.lang-dropdown');
    if (langDropdown) {
      langDropdown.classList.remove('active');
    }
    
    console.log(`‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ ${lang}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —è–∑—ã–∫–∞:', error);
    const previousLang = lang === LANGUAGES.RU ? LANGUAGES.EN : LANGUAGES.RU;
    updateLangToggleBtnText(previousLang);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    const notification = document.createElement('div');
    notification.className = 'error-notification';
    notification.textContent = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.remove();
    }, 3000);
  } finally {
    setLangButtonLoading(false);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function initLang() {
  try {
    setLangButtonLoading(true);
    
    // –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–∑ localStorage –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'ru'
    const savedLang = localStorage.getItem('lang') || LANGUAGES.RU;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —è–∑—ã–∫
    await applyLang(savedLang);
    
    console.log('‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —è–∑—ã–∫–∞:', error);
  } finally {
    setLangButtonLoading(false);
  }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
function setupLangToggleBtn() {
  const langToggle = document.querySelector('.lang-toggle');
  const langBtn = document.querySelector('.lang-btn');
  const langDropdown = document.querySelector('.lang-dropdown');
  
  if (langToggle && langBtn && langDropdown) {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
    langBtn.addEventListener('click', (e) => {
      e.stopPropagation();
      langDropdown.classList.toggle('active');
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –æ–ø—Ü–∏—è–º
    const langOptions = langDropdown.querySelectorAll('.lang-option');
    langOptions.forEach(option => {
      option.addEventListener('click', async () => {
        const lang = option.dataset.lang;
        if (lang) {
          await applyLang(lang);
        }
      });
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
    document.addEventListener('click', (e) => {
      if (!langToggle.contains(e.target)) {
        langDropdown.classList.remove('active');
      }
    });
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ i18n.js
function waitForI18n() {
  return new Promise((resolve) => {
    if (typeof loadLang === 'function') {
      resolve();
    } else {
      const checkInterval = setInterval(() => {
        if (typeof loadLang === 'function') {
          clearInterval(checkInterval);
          resolve();
        }
      }, 50);
    }
  });
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤
let currentReviewsPage = 1;
let reviewsPerPage = 3; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
let allReviews = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤ (–∏–∑ JSON –∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö)

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞
function getReviewsPerPage() {
    // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 8 –æ—Ç–∑—ã–≤–æ–≤ (2 —Å—Ç–æ–ª–±—Ü–∞ –ø–æ 4)
    return 8;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ JSON
async function loadGeneratedReviews() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª reviews.json. –ï—Å–ª–∏ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º generated_reviews.json
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ª—É—á—à–µ –∏–º–µ—Ç—å –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏—Å—Ç–æ—á–Ω–∏–∫
    const response = await fetch('reviews.json');
    if (!response.ok) {
        console.warn('reviews.json not found, trying generated_reviews.json');
        const fallbackResponse = await fetch('generated_reviews.json');
        if (!fallbackResponse.ok) {
             console.error('Failed to load reviews from both reviews.json and generated_reviews.json');
             return [];
        }
        return await fallbackResponse.json();
    }
    return await response.json();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤:', error);
    return [];
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ DOM-—ç–ª–µ–º–µ–Ω—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ç–∑—ã–≤–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–∑ reviews-carousel.js)
function createReviewCard(review) {
    const card = document.createElement('div');
    card.className = 'review-card'; // –ö–ª–∞—Å—Å –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É (–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞—Ç—É –∏–∑ –æ—Ç–∑—ã–≤–∞, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º)
    const reviewDate = review.date && review.date !== '—Å–ª—É—á–∞–π–Ω–∞—è –¥–∞—Ç–∞ —Å 2021 –ø–æ —Å–µ–≥–æ–¥–Ω—è' ? review.date : getRandomDate();
    card.innerHTML = `
        <div class="review-header">
            <div class="review-avatar">${review.letter || (review.name ? review.name[0] : '?')}</div>
            <div class="review-info">
                <div class="review-name">${review.name || '–ê–Ω–æ–Ω–∏–º'} <span style="font-size:0.9em;color:#76c7c0;">${review.flag || ''}</span></div>
                <span class="review-date">${reviewDate}</span>
                <div style="font-size:0.95em;color:#aaa;">${review.lang || ''}</div>
            </div>
        </div>
        <div class="review-content">
            <span class="review-short">${review.short || ''}</span>
            <button class="read-more">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
        </div>
    `;
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
    card.querySelector('.read-more').addEventListener('click', function(e) {
        e.stopPropagation();
        showModal(review.full || review.short || '–ù–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞.');
    });

     // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å 'generated' –¥–ª—è —Å—Ç–∏–ª–µ–π –∏ –æ—Ç–ª–∏—á–∏—è –æ—Ç –ª–æ–∫–∞–ª—å–Ω—ã—Ö
    card.classList.add('generated');

    return card;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–∞—Ç—ã (–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –∏–∑ reviews-carousel.js)
function getRandomDate() {
    const start = new Date(2021, 0, 1).getTime();
    const end = new Date().getTime();
    const date = new Date(start + Math.random() * (end - start));
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const year = date.getFullYear();
    return `${day}.${month}.${year}`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –∏–∑ reviews-carousel.js, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–∞)
function showModal(text) {
    let modal = document.getElementById('modal'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ index3.html
    let modalText = document.getElementById('modal-text'); // –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –æ—Ç–∑—ã–≤–∞
    
    if (!modal || !modalText) {
      console.error('Modal elements not found in index3.html');
      return;
    }

    modalText.textContent = text;
    modal.classList.add('show');

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª–∫–∏
     modal.onclick = e => { if (e.target === modal) modal.classList.remove('show'); };

     // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç (—É–∂–µ –µ—Å—Ç—å –≤ index3.html, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
     const closeModalBtn = modal.querySelector('.close-modal');
     if(closeModalBtn && !closeModalBtn.dataset.listenerAdded) { // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
        closeModalBtn.dataset.listenerAdded = 'true';
        closeModalBtn.onclick = () => { // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º onclick, —Ç–∞–∫ –∫–∞–∫ –≤ index3.html –æ–Ω –µ—Å—Ç—å
             modal.classList.remove('show');
        };
     }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤
function updateReviewsPagination() {
  const totalPages = Math.ceil(allReviews.length / reviewsPerPage);
  const pagination = document.querySelector('.reviews-pagination');
  
  if (!pagination) return;

  // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü, –∫—Ä–æ–º–µ —Å—Ç—Ä–µ–ª–æ–∫
  pagination.querySelectorAll('.pagination-page, .pagination-ellipsis').forEach(button => button.remove());

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const createPageButton = (pageNum) => {
    const pageButton = document.createElement('button');
    pageButton.classList.add('pagination-page');
    pageButton.textContent = pageNum;
    if (pageNum === currentReviewsPage) {
      pageButton.classList.add('active');
    }
    return pageButton;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–ª–∏–ø—Å–∏—Å–∞
  const createEllipsis = () => {
    const ellipsis = document.createElement('span');
    ellipsis.classList.add('pagination-ellipsis');
    ellipsis.textContent = '...';
    return ellipsis;
  };

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  pagination.insertBefore(createPageButton(1), pagination.querySelector('.pagination-arrow.next'));

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–æ–∫—Ä—É–≥ —Ç–µ–∫—É—â–µ–π
  const startPage = Math.max(2, currentReviewsPage - 1);
  const endPage = Math.min(totalPages - 1, currentReviewsPage + 1);

  // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–ª–∏–ø—Å–∏—Å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  if (startPage > 2) {
    pagination.insertBefore(createEllipsis(), pagination.querySelector('.pagination-arrow.next'));
  }

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–æ–∫—Ä—É–≥ —Ç–µ–∫—É—â–µ–π
  for (let i = startPage; i <= endPage; i++) {
    pagination.insertBefore(createPageButton(i), pagination.querySelector('.pagination-arrow.next'));
  }

  // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–ª–∏–ø—Å–∏—Å –ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  if (endPage < totalPages - 1) {
    pagination.insertBefore(createEllipsis(), pagination.querySelector('.pagination-arrow.next'));
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –ø–µ—Ä–≤–∞—è
  if (totalPages > 1) {
    pagination.insertBefore(createPageButton(totalPages), pagination.querySelector('.pagination-arrow.next'));
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—Ä–µ–ª–æ–∫
  const prevButton = pagination.querySelector('.pagination-arrow.prev');
  const nextButton = pagination.querySelector('.pagination-arrow.next');
  
  if (prevButton) prevButton.disabled = currentReviewsPage === 1;
  if (nextButton) nextButton.disabled = currentReviewsPage >= totalPages;

  // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞–ª–∞ –±–æ–ª—å—à–µ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
  if (currentReviewsPage > totalPages) {
    currentReviewsPage = totalPages > 0 ? totalPages : 1;
    updateReviewsDisplay();
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤
function updateReviewsDisplay() {
  const reviewsToDisplay = allReviews;
  const startIndex = (currentReviewsPage - 1) * reviewsPerPage;
  const endIndex = Math.min(startIndex + reviewsPerPage, reviewsToDisplay.length);
  
  const reviewsContainer = document.querySelector('.reviews-carousel');
  if (!reviewsContainer) return;

  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ç–∑—ã–≤–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
  reviewsContainer.querySelectorAll('.review-card').forEach(card => card.style.display = 'none');

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  for (let i = startIndex; i < endIndex; i++) {
    const reviewCard = reviewsContainer.children[i];
     if(reviewCard) {
         reviewCard.style.removeProperty('display'); // –û—á–∏—â–∞–µ–º inline-—Å—Ç–∏–ª—å display
     }
  }
  
  updateReviewsPagination();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤
function initReviewsPagination() {
  const pagination = document.querySelector('.reviews-pagination');
  
  if (!pagination) {
    console.error('‚ùå Reviews pagination element not found');
    return;
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  pagination.addEventListener('click', (e) => {
    if (e.target.classList.contains('pagination-page')) {
      const page = parseInt(e.target.textContent);
      if (page !== currentReviewsPage) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
          currentReviewsPage = page;
          updateReviewsDisplay();
      }
    } else if (e.target.classList.contains('pagination-arrow')) {
      if (e.target.classList.contains('prev') && currentReviewsPage > 1) {
        currentReviewsPage--;
        updateReviewsDisplay();
      } else if (e.target.classList.contains('next')) {
        const totalPages = Math.ceil(allReviews.length / reviewsPerPage);
        if (currentReviewsPage < totalPages) {
          currentReviewsPage++;
          updateReviewsDisplay();
        }
      }
    }
  });
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –ø–µ—Ä–≤—ã–π –ø–æ–∫–∞–∑ –±—É–¥–µ—Ç –≤ initializeApp
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initializeApp() {
  try {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é
    const menuIcon = document.querySelector(".menu-icon");
    if (menuIcon) {
      menuIcon.addEventListener("click", (e) => {
        e.stopPropagation();
        toggleMenu();
      });
    }

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener("resize", () => {
      // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞
      const newReviewsPerPage = getReviewsPerPage();
      if (newReviewsPerPage !== reviewsPerPage) {
          reviewsPerPage = newReviewsPerPage;
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ –ø–µ—Ä–≤—É—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
          currentReviewsPage = 1;
          updateReviewsDisplay(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏—é
      } else {
          // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –ø–æ–≤–æ—Ä–æ—Ç–µ —ç–∫—Ä–∞–Ω–∞)
          updateReviewsDisplay();
      }
      // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –∫–∞—Ä—É—Å–µ–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      const imageCarouselInnerResize = document.querySelector('.carousel-inner');
      const imageCarouselItemsResize = document.querySelectorAll('.carousel-item');
      if (imageCarouselInnerResize && imageCarouselItemsResize.length > 0) {
          // –°–±—Ä–æ—Å–∏–º –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (–±–µ–∑ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏)
          imageCarouselInnerResize.style.transition = 'none';
          imageCarouselInnerResize.style.transform = `translateX(0px)`;
      }
    });

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–µ–∫—Ü–∏–π
    const sections = document.querySelectorAll('.expandable-section');
    sections.forEach(section => {
      const header = section.querySelector('.expandable-header');
      if (header) {
        header.addEventListener('click', toggleSection);
      }
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º particles.js –µ—Å–ª–∏ –µ—Å—Ç—å
    if (window.particlesJS) {
      const particlesEl = document.getElementById('particles-js');
      if (particlesEl) {
        particlesJS("particles-js", {
          "particles": {
            "number": { "value": 100, "density": { "enable": true, "value_area": 800 } },
            "color": { "value": "#00ffff" },
            "shape": { "type": "circle", "stroke": { "width": 1, "color": "#ffffff" } },
            "opacity": { "value": 0.6, "random": true },
            "size": { "value": 3, "random": true },
            "line_linked": { "enable": true, "distance": 150, "color": "#ffffff", "opacity": 0.4, "width": 1 },
            "move": { "enable": true, "speed": 2, "direction": "none", "random": false, "straight": false, "out_mode": "out" }
          },
          "interactivity": {
            "detect_on": "canvas",
            "events": { "onhover": { "enable": true, "mode": "grab" }, "onclick": { "enable": true, "mode": "push" } },
            "modes": { "grab": { "distance": 200, "line_linked": { "opacity": 1 } }, "push": { "particles_nb": 4 } }
          },
          "retina_detect": true
        });
      }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è wave-row
    const rows = document.querySelectorAll(".wave-row");
    if (rows.length) {
      const shown = new Set();
      const waveObserver = new IntersectionObserver((entries) => {
        let delay = 0;
        entries.forEach(entry => {
          if (entry.isIntersecting && !shown.has(entry.target)) {
            setTimeout(() => {
              entry.target.classList.add("visible");
            }, delay);
            delay += 200;
            shown.add(entry.target);
            waveObserver.unobserve(entry.target);
          }
        });
      }, { threshold: 0, rootMargin: "0px" });
      rows.forEach(row => waveObserver.observe(row));
      setTimeout(() => window.dispatchEvent(new Event('scroll')), 100);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è dot-grid
    function animateDots(grid) {
      const activeCount = parseInt(grid.getAttribute('data-active')) || 0;
      const dots = [];
      for (let i = 0; i < 100; i++) {
        const dot = document.createElement('div');
        dot.classList.add('dot');
        if (i < activeCount) dot.classList.add('active');
        dots.push(dot);
        grid.appendChild(dot);
      }
      dots.forEach((dot, i) => {
        setTimeout(() => dot.classList.add('visible'), i * 20);
      });
    }

    const dotGrids = document.querySelectorAll('.dot-grid');
    if (dotGrids.length) {
      const dotObserver = new IntersectionObserver(entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting && !entry.target.classList.contains('activated')) {
            entry.target.classList.add('activated');
            animateDots(entry.target);
          }
        });
      }, { threshold: 0.5 });
      dotGrids.forEach(grid => {
        dotObserver.observe(grid);
      });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è cookie consent
    const cookieConsent = document.getElementById('cookieConsent');
    if (cookieConsent) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ cookie
      const cookiesAccepted = document.cookie.split(';').some(cookie => cookie.trim().startsWith('cookiesAccepted='));
      
      if (!cookiesAccepted) {
        cookieConsent.style.display = 'flex';
        const acceptBtn = document.getElementById('acceptCookiesBtn');
        if (acceptBtn) {
          acceptBtn.addEventListener('click', function() {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookie —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            const date = new Date();
            date.setFullYear(date.getFullYear() + 1);
            document.cookie = `cookiesAccepted=true; path=/; expires=${date.toUTCString()}; SameSite=Lax`;
            
            // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            cookieConsent.style.display = 'none';
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ cookie —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è
            console.log('Cookie —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', document.cookie);
          });
        }
      } else {
        cookieConsent.style.display = 'none';
      }
    }

    // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ i18n.js
    await waitForI18n();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —è–∑—ã–∫
    await initLang();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    setupLangToggleBtn();

    // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ó–∞—Ü–∏–∫–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞) ---
    const imageCarouselContainer = document.querySelector('.carousel-container');
    const imageCarouselInner = document.querySelector('.carousel-inner');
    const originalImageItems = document.querySelectorAll('.carousel-item'); // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const imageLeftBtn = document.querySelector('.carousel-btn.left-btn');
    const imageRightBtn = document.querySelector('.carousel-btn.right-btn');

    if (imageCarouselInner && originalImageItems.length > 0 && imageCarouselContainer && imageLeftBtn && imageRightBtn) {
      console.log('‚úÖ –ö–∞—Ä—É—Å–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞–π–¥–µ–Ω–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (–∑–∞—Ü–∏–∫–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞)...');

      const itemWidth = originalImageItems[0]?.offsetWidth || 0;
      const gap = 20; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–µ–º—É CSS gap
      const totalItemWidth = itemWidth + gap;
      const containerWidth = imageCarouselContainer.offsetWidth;

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–∏–¥–Ω–æ, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, —Å–∫–æ–ª—å–∫–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
      // –ö–ª–æ–Ω–∏—Ä—É–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤–∏–¥–∏–º—É—é –æ–±–ª–∞—Å—Ç—å —Å –∑–∞–ø–∞—Å–æ–º
      const visibleItemsCount = Math.ceil(containerWidth / totalItemWidth);
      const cloneCount = visibleItemsCount > 0 ? visibleItemsCount + 2 : originalImageItems.length; // –ö–ª–æ–Ω–∏—Ä—É–µ–º –º–∏–Ω–∏–º—É–º visibleItemsCount + 2, –∏–ª–∏ –≤—Å–µ, –µ—Å–ª–∏ –≤–∏–¥–Ω–æ –º–∞–ª–æ

      // –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ inner
      for (let i = 0; i < cloneCount; i++) {
        const cloneIndex = (originalImageItems.length - 1 - i + originalImageItems.length) % originalImageItems.length;
        const clone = originalImageItems[cloneIndex].cloneNode(true);
        imageCarouselInner.prepend(clone);
      }

      // –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü inner
      for (let i = 0; i < cloneCount; i++) {
        const cloneIndex = i % originalImageItems.length;
        const clone = originalImageItems[cloneIndex].cloneNode(true);
        imageCarouselInner.appendChild(clone);
      }

      // –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –≤–∫–ª—é—á–∞—è –∫–ª–æ–Ω—ã
      let allImageItems = imageCarouselInner.querySelectorAll('.carousel-item');

      // –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞. –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–ø–æ—Å–ª–µ –∫–ª–æ–Ω–æ–≤ –≤ –Ω–∞—á–∞–ª–µ)
      let currentImageIndex = cloneCount;
      let autoScrollInterval = null;
      const autoScrollDelay = 5000; // –ó–∞–¥–µ—Ä–∂–∫–∞ –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

      const updateImageCarousel = (smooth = true) => {
        imageCarouselInner.style.transition = smooth ? 'transform 0.5s ease' : 'none'; // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å transition –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å setTimeout
        imageCarouselInner.style.transform = `translateX(${-currentImageIndex * totalItemWidth}px)`;

        // –õ–æ–≥–∏–∫–∞ –¥–ª—è –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è: –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –∫–ª–æ–Ω–æ–≤
        if (currentImageIndex >= allImageItems.length - cloneCount) {
          // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–Ω—Ü–µ
          setTimeout(() => {
            currentImageIndex = cloneCount; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–º—É –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
            updateImageCarousel(false); // –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ (–±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏)
          }, 500); // –î–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å transition duration CSS
        } else if (currentImageIndex < cloneCount) {
          // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–∞—á–∞–ª–µ
           setTimeout(() => {
            currentImageIndex = allImageItems.length - cloneCount * 2; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
            updateImageCarousel(false); // –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥
          }, 500); // –î–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å transition duration CSS
        }
      };

      const startAutoScroll = () => {
        stopAutoScroll();
        autoScrollInterval = setInterval(() => {
          currentImageIndex++;
          updateImageCarousel();
        }, autoScrollDelay);
      };

      const stopAutoScroll = () => {
        if (autoScrollInterval) {
          clearInterval(autoScrollInterval);
          autoScrollInterval = null;
        }
      };

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏
      updateImageCarousel(false);

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–Ω–æ–ø–∫–∞–º
      imageLeftBtn.addEventListener('click', () => {
        stopAutoScroll();
        currentImageIndex--;
        updateImageCarousel();
        // startAutoScroll(); // –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∏–Ω–≥ –ø–æ—Å–ª–µ —Ä—É—á–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
      });

      imageRightBtn.addEventListener('click', () => {
        stopAutoScroll();
        currentImageIndex++;
        updateImageCarousel();
        // startAutoScroll(); // –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∏–Ω–≥ –ø–æ—Å–ª–µ —Ä—É—á–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
      });

      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∏–Ω–≥ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
       startAutoScroll();

      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∏–Ω–≥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–∞—Ä—É—Å–µ–ª—å
       if(imageCarouselContainer) {
         imageCarouselContainer.addEventListener('mouseenter', stopAutoScroll);
         imageCarouselContainer.addEventListener('mouseleave', startAutoScroll);
       }

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞: —Å–±—Ä–æ—Å –ø–æ–∑–∏—Ü–∏–∏ –∏, –≤–æ–∑–º–æ–∂–Ω–æ, –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
       window.addEventListener('resize', () => {
         // –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç: —Å–±—Ä–æ—Å –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é.
         // –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏.
         currentIndex = cloneCount;
         updateImageCarousel(false); // –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —Å–±—Ä–æ—Å

         // –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å debounce –¥–ª—è resize –∏ –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
       });

    } else {
      console.warn('üö´ –ö–∞—Ä—É—Å–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—É—Å—Ç–∞ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–Ω–æ–ø–∫–∏.');
    }

    // --- –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ ---

    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
    const generatedReviews = await loadGeneratedReviews();
    
    // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
    const localReviews = getLocalReviews(); // –§—É–Ω–∫—Ü–∏—è –∏–∑ reviews-local.js
    
    // 3. –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –æ—Ç–∑—ã–≤—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ DOM
    allReviews = generatedReviews.concat(localReviews); // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    
    const reviewsContainer = document.querySelector('.reviews-carousel');
    if (reviewsContainer) {
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
        reviewsContainer.innerHTML = '';
        // –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ç–∑—ã–≤–æ–≤ (—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ) –≤ DOM
        allReviews.forEach(review => {
            const card = createReviewCard(review);
            reviewsContainer.appendChild(card);
        });
    }

    // 4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –æ—Ç–∑—ã–≤–æ–≤ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    reviewsPerPage = getReviewsPerPage();
    initReviewsPagination(); // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    updateReviewsDisplay(); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ç–∑—ã–≤–æ–≤

    // --- –õ–æ–≥–∏–∫–∞ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–æ–≤–æ—Å—Ç–µ–π ---
    const newsModal = document.querySelector('.news-modal');
    const newsModalCloseBtn = document.querySelector('.news-modal-close');

    if (newsModal && newsModalCloseBtn) {
      // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
      newsModalCloseBtn.addEventListener('click', () => {
        newsModal.classList.remove('active');
      });

      // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
      newsModal.addEventListener('click', (e) => {
        if (e.target === newsModal) {
          newsModal.classList.remove('active');
        }
      });
    }

    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', initializeApp);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ (–Ω—É–∂–Ω–∞ –∑–¥–µ—Å—å –¥–ª—è initializeApp)
function getLocalReviews() {
    try {
      // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ localStorage —É–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ DOMContentLoaded
      return JSON.parse(localStorage.getItem('localReviews') || '[]');
    } catch {
      console.error('Error reading local reviews from localStorage.');
      return [];
    }
  }


document.addEventListener('DOMContentLoaded', function() {
    const navbar = document.querySelector('.navbar');
    let hasScrolled = false;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const isHomePage = window.location.pathname.endsWith('index.html') || 
                      window.location.pathname.endsWith('/') ||
                      window.location.pathname.endsWith('index');
    
    // –ï—Å–ª–∏ –º—ã –Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–ª–∏ —É–∂–µ –ø—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–≤–±–∞—Ä
    if (!isHomePage || window.scrollY > 0) {
        navbar.classList.add('visible');
        hasScrolled = true;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∫—Ä–æ–ª–ª–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    if (isHomePage) {
        window.addEventListener('scroll', function() {
            if (!hasScrolled && window.scrollY > 0) {
                navbar.classList.add('visible');
                hasScrolled = true;
            }
        });
    }
}); 